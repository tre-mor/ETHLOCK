{"$message_type":"diagnostic","message":"expected `;`, found `}`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1629,"byte_end":1630,"line_start":47,"line_end":47,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1628,"byte_end":1628,"line_start":46,"line_end":46,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    Ok(())","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add `;` here","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1628,"byte_end":1628,"line_start":46,"line_end":46,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    Ok(())","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected `;`, found `}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:46:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ok(())\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: add `;` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected token\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected `;`, found `}`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":328,"byte_end":1630,"line_start":12,"line_end":47,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    let rpc_url = \"https://site1.moralis-nodes.com/eth/d2efae9b74dc45bf9c161e4b13c2cd86\".parse()?;","highlight_start":1,"highlight_end":99},{"text":"    let provider = ProviderBuilder::new().on_http(rpc_url);","highlight_start":1,"highlight_end":60},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    let ","highlight_start":1,"highlight_end":9},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    // if let Ok(latest_block_number) = block_info::get_latest_block_number(&provider).await","highlight_start":1,"highlight_end":93},{"text":"    // {","highlight_start":1,"highlight_end":9},{"text":"    //     println!(\"latest block number: {}\", latest_block_number);","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    //     // if let Ok(latest_block) = block_info::build_block_struct(&provider, latest_block_number).await","highlight_start":1,"highlight_end":109},{"text":"    //     // {","highlight_start":1,"highlight_end":16},{"text":"    //     //     println!(\"latest block: {:#?}\", latest_block);","highlight_start":1,"highlight_end":65},{"text":"    //     // }","highlight_start":1,"highlight_end":16},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    //     if let Ok(latest_block) = block_info::build_block_struct_simple(&provider, Number(latest_block_number)).await","highlight_start":1,"highlight_end":121},{"text":"    //     {","highlight_start":1,"highlight_end":13},{"text":"    //         println!(\"latest block: {:#?}\", latest_block);","highlight_start":1,"highlight_end":62},{"text":"    //     }","highlight_start":1,"highlight_end":13},{"text":"    // }","highlight_start":1,"highlight_end":9},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // if let Ok(latest_block_number) = block_info::get_latest_block_number(&provider).await","highlight_start":1,"highlight_end":93},{"text":"    // {","highlight_start":1,"highlight_end":9},{"text":"    //     println!(\"latest block number: {}\", latest_block_number);","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    //     if let Ok(latest_n_block_numbers) = block_info::get_latest_n_block_numbers(latest_block_number, 5).await","highlight_start":1,"highlight_end":116},{"text":"    //     {","highlight_start":1,"highlight_end":13},{"text":"    //         println!(\"previous {} blocks: {:#?}\", latest_n_block_numbers.len(), latest_n_block_numbers);","highlight_start":1,"highlight_end":108},{"text":"    //     }","highlight_start":1,"highlight_end":13},{"text":"    // }","highlight_start":1,"highlight_end":9},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    // println!(\"{:?}\", view_block_header_data(&provider, Latest).await);","highlight_start":1,"highlight_end":74},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    Ok(())","highlight_start":1,"highlight_end":11},{"text":"}","highlight_start":1,"highlight_end":2}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1628,"byte_end":1628,"line_start":46,"line_end":46,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    Ok(())","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add `;` here","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1628,"byte_end":1628,"line_start":46,"line_end":46,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    Ok(())","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected `;`, found `}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:46:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let rpc_url = \"https://site1.moralis-nodes.com/eth/d2efae9b74dc45bf9c161e4b13c2cd86\".parse()?;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let provider = ProviderBuilder::new().on_http(rpc_url);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ok(())\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: add `;` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected token\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `block_data_option` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":12633,"byte_end":12650,"line_start":380,"line_end":380,"column_start":22,"column_end":39,"is_primary":true,"text":[{"text":"    let block_data = block_data_option.unwrap();","highlight_start":22,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a local variable with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src\\block_info.rs","byte_start":12633,"byte_end":12650,"line_start":380,"line_end":380,"column_start":22,"column_end":39,"is_primary":true,"text":[{"text":"    let block_data = block_data_option.unwrap();","highlight_start":22,"highlight_end":39}],"label":null,"suggested_replacement":"block_option","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `block_data_option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:380:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let block_data = block_data_option.unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a local variable with a similar name exists: `block_option`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Earliest`, `Finalized`, `Latest`, `Number`, `Pending`, `Safe`, and `primitives::U256`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":43,"byte_end":49,"line_start":2,"line_end":2,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"    eips::BlockNumberOrTag::{ Latest, Finalized, Safe, Earliest, Pending, Number },","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":51,"byte_end":60,"line_start":2,"line_end":2,"column_start":39,"column_end":48,"is_primary":true,"text":[{"text":"    eips::BlockNumberOrTag::{ Latest, Finalized, Safe, Earliest, Pending, Number },","highlight_start":39,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":62,"byte_end":66,"line_start":2,"line_end":2,"column_start":50,"column_end":54,"is_primary":true,"text":[{"text":"    eips::BlockNumberOrTag::{ Latest, Finalized, Safe, Earliest, Pending, Number },","highlight_start":50,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":68,"byte_end":76,"line_start":2,"line_end":2,"column_start":56,"column_end":64,"is_primary":true,"text":[{"text":"    eips::BlockNumberOrTag::{ Latest, Finalized, Safe, Earliest, Pending, Number },","highlight_start":56,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":78,"byte_end":85,"line_start":2,"line_end":2,"column_start":66,"column_end":73,"is_primary":true,"text":[{"text":"    eips::BlockNumberOrTag::{ Latest, Finalized, Safe, Earliest, Pending, Number },","highlight_start":66,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":87,"byte_end":93,"line_start":2,"line_end":2,"column_start":75,"column_end":81,"is_primary":true,"text":[{"text":"    eips::BlockNumberOrTag::{ Latest, Finalized, Safe, Earliest, Pending, Number },","highlight_start":75,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":101,"byte_end":117,"line_start":3,"line_end":3,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    primitives::U256,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":11,"byte_end":17,"line_start":1,"line_end":2,"column_start":12,"column_end":5,"is_primary":true,"text":[{"text":"use alloy::{","highlight_start":12,"highlight_end":13},{"text":"    eips::BlockNumberOrTag::{ Latest, Finalized, Safe, Earliest, Pending, Number },","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":17,"byte_end":123,"line_start":2,"line_end":4,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    eips::BlockNumberOrTag::{ Latest, Finalized, Safe, Earliest, Pending, Number },","highlight_start":5,"highlight_end":84},{"text":"    primitives::U256,","highlight_start":1,"highlight_end":22},{"text":"    providers::ProviderBuilder,","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":149,"byte_end":152,"line_start":4,"line_end":5,"column_start":31,"column_end":2,"is_primary":true,"text":[{"text":"    providers::ProviderBuilder,","highlight_start":31,"highlight_end":32},{"text":"};","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `Earliest`, `Finalized`, `Latest`, `Number`, `Pending`, `Safe`, and `primitives::U256`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:2:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    eips::BlockNumberOrTag::{ Latest, Finalized, Safe, Earliest, Pending, Number },\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    primitives::U256,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `block_info::view_block_header_data`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":158,"byte_end":192,"line_start":6,"line_end":6,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"use block_info::view_block_header_data;","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":154,"byte_end":194,"line_start":6,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use block_info::view_block_header_data;","highlight_start":1,"highlight_end":40},{"text":"// use block_info::get_latest_block_number;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `block_info::view_block_header_data`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse block_info::view_block_header_data;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BlockHash`, `Sealable`, `eip4844`, `error`, `self`, and `signers::k256::elliptic_curve::FieldBytesEncoding`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\block_info.rs","byte_start":86,"byte_end":90,"line_start":7,"line_end":7,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            self, eip4844 as tx_eip4844, TxEnvelope","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":224,"byte_end":231,"line_start":12,"line_end":12,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        eip4844, BlockNumberOrTag","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":337,"byte_end":346,"line_start":17,"line_end":17,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":362,"byte_end":370,"line_start":17,"line_end":17,"column_start":43,"column_end":51,"is_primary":true,"text":[{"text":"        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256","highlight_start":43,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":504,"byte_end":509,"line_start":25,"line_end":25,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        error, Block, BlockTransactions, BlockTransactionsKind::Full, Header, Transaction, TransactionReceipt","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":620,"byte_end":669,"line_start":27,"line_end":27,"column_start":5,"column_end":54,"is_primary":true,"text":[{"text":"    signers::k256::elliptic_curve::FieldBytesEncoding, transports::http::Http","highlight_start":5,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\block_info.rs","byte_start":86,"byte_end":92,"line_start":7,"line_end":7,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"            self, eip4844 as tx_eip4844, TxEnvelope","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":213,"byte_end":224,"line_start":11,"line_end":12,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    {","highlight_start":5,"highlight_end":6},{"text":"        eip4844, BlockNumberOrTag","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":224,"byte_end":233,"line_start":12,"line_end":12,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        eip4844, BlockNumberOrTag","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":249,"byte_end":256,"line_start":12,"line_end":13,"column_start":34,"column_end":6,"is_primary":true,"text":[{"text":"        eip4844, BlockNumberOrTag","highlight_start":34,"highlight_end":34},{"text":"    }, ","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":335,"byte_end":346,"line_start":17,"line_end":17,"column_start":16,"column_end":27,"is_primary":true,"text":[{"text":"        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256","highlight_start":16,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":360,"byte_end":370,"line_start":17,"line_end":17,"column_start":41,"column_end":51,"is_primary":true,"text":[{"text":"        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256","highlight_start":41,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":504,"byte_end":511,"line_start":25,"line_end":25,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        error, Block, BlockTransactions, BlockTransactionsKind::Full, Header, Transaction, TransactionReceipt","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":612,"byte_end":669,"line_start":26,"line_end":27,"column_start":6,"column_end":54,"is_primary":true,"text":[{"text":"    }, ","highlight_start":6,"highlight_end":8},{"text":"    signers::k256::elliptic_curve::FieldBytesEncoding, transports::http::Http","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `BlockHash`, `Sealable`, `eip4844`, `error`, `self`, and `signers::k256::elliptic_curve::FieldBytesEncoding`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:7:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            self, eip4844 as tx_eip4844, TxEnvelope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        eip4844, BlockNumberOrTag\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        error, Block, BlockTransactions, BlockTransactionsKind::Full, Header, Transaction, TransactionReceipt\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }, \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    signers::k256::elliptic_curve::FieldBytesEncoding, transports::http::Http\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the `?` operator can only be used in an async block that returns `Result` or `Option` (or another type that implements `FromResidual`)","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":426,"byte_end":427,"line_start":13,"line_end":13,"column_start":97,"column_end":98,"is_primary":true,"text":[{"text":"    let rpc_url = \"https://site1.moralis-nodes.com/eth/d2efae9b74dc45bf9c161e4b13c2cd86\".parse()?;","highlight_start":97,"highlight_end":98}],"label":"cannot use the `?` operator in an async block that returns `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":426,"byte_end":427,"line_start":13,"line_end":13,"column_start":97,"column_end":98,"is_primary":false,"text":[{"text":"    let rpc_url = \"https://site1.moralis-nodes.com/eth/d2efae9b74dc45bf9c161e4b13c2cd86\".parse()?;","highlight_start":97,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of operator `?`","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":255,"byte_end":269,"line_start":10,"line_end":10,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[tokio::main]","highlight_start":1,"highlight_end":15}],"label":"this function should return `Result` or `Option` to accept `?`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":255,"byte_end":269,"line_start":10,"line_end":10,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[tokio::main]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[tokio::main]","def_site_span":{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tokio-macros-2.5.0\\src/lib.rs","byte_start":6882,"byte_end":6946,"line_start":254,"line_end":254,"column_start":1,"column_end":65,"is_primary":false,"text":[{"text":"pub fn main(args: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `FromResidual<Result<Infallible, url::parser::ParseError>>` is not implemented for `()`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the `?` operator can only be used in an async block that returns `Result` or `Option` (or another type that implements `FromResidual`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:13:97\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[tokio::main]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis function should return `Result` or `Option` to accept `?`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let rpc_url = \"https://site1.moralis-nodes.com/eth/d2efae9b74dc45bf9c161e4b13c2cd86\".parse()?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot use the `?` operator in an async block that returns `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `FromResidual<Result<Infallible, url::parser::ParseError>>` is not implemented for `()`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":494,"byte_end":1628,"line_start":16,"line_end":46,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    let ","highlight_start":5,"highlight_end":9},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    // if let Ok(latest_block_number) = block_info::get_latest_block_number(&provider).await","highlight_start":1,"highlight_end":93},{"text":"    // {","highlight_start":1,"highlight_end":9},{"text":"    //     println!(\"latest block number: {}\", latest_block_number);","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    //     // if let Ok(latest_block) = block_info::build_block_struct(&provider, latest_block_number).await","highlight_start":1,"highlight_end":109},{"text":"    //     // {","highlight_start":1,"highlight_end":16},{"text":"    //     //     println!(\"latest block: {:#?}\", latest_block);","highlight_start":1,"highlight_end":65},{"text":"    //     // }","highlight_start":1,"highlight_end":16},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    //     if let Ok(latest_block) = block_info::build_block_struct_simple(&provider, Number(latest_block_number)).await","highlight_start":1,"highlight_end":121},{"text":"    //     {","highlight_start":1,"highlight_end":13},{"text":"    //         println!(\"latest block: {:#?}\", latest_block);","highlight_start":1,"highlight_end":62},{"text":"    //     }","highlight_start":1,"highlight_end":13},{"text":"    // }","highlight_start":1,"highlight_end":9},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // if let Ok(latest_block_number) = block_info::get_latest_block_number(&provider).await","highlight_start":1,"highlight_end":93},{"text":"    // {","highlight_start":1,"highlight_end":9},{"text":"    //     println!(\"latest block number: {}\", latest_block_number);","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    //     if let Ok(latest_n_block_numbers) = block_info::get_latest_n_block_numbers(latest_block_number, 5).await","highlight_start":1,"highlight_end":116},{"text":"    //     {","highlight_start":1,"highlight_end":13},{"text":"    //         println!(\"previous {} blocks: {:#?}\", latest_n_block_numbers.len(), latest_n_block_numbers);","highlight_start":1,"highlight_end":108},{"text":"    //     }","highlight_start":1,"highlight_end":13},{"text":"    // }","highlight_start":1,"highlight_end":9},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    // println!(\"{:?}\", view_block_header_data(&provider, Latest).await);","highlight_start":1,"highlight_end":74},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    Ok(())","highlight_start":1,"highlight_end":11}],"label":"expected `Result<(), Box<dyn Error>>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":289,"byte_end":327,"line_start":11,"line_end":11,"column_start":20,"column_end":58,"is_primary":false,"text":[{"text":"async fn main() -> Result<(), Box<dyn std::error::Error>>","highlight_start":20,"highlight_end":58}],"label":"expected `Result<(), Box<(dyn StdError + 'static)>>` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<(), Box<(dyn StdError + 'static)>>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try adding an expression at the end of the block","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1628,"byte_end":1628,"line_start":46,"line_end":46,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    Ok(())","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":";\n    Ok(())","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0masync fn main() -> Result<(), Box<dyn std::error::Error>>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `Result<(), Box<(dyn StdError + 'static)>>` because of return type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // if let Ok(latest_block_number) = block_info::get_latest_block_number(&provider).await\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ok(())\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<(), Box<dyn Error>>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<(), Box<(dyn StdError + 'static)>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try adding an expression at the end of the block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    Ok(())\u001b[0m\u001b[0m\u001b[38;5;10m;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     Ok(())\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `BlockHeader`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\block_info.rs","byte_start":138,"byte_end":149,"line_start":8,"line_end":8,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"        }, BlockHeader, Transaction as ConsensusTransaction","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `BlockHeader`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:8:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }, BlockHeader, Transaction as ConsensusTransaction\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 5 previous errors; 4 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 5 previous errors; 4 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0308, E0425.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0277, E0308, E0425.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
