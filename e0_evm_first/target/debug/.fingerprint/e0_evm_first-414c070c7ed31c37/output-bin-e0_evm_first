{"$message_type":"diagnostic","message":"unused imports: `BlockHash`, `Sealable`, `Transaction`, `TxEnvelope`, `TxKind`, `eip4844 as tx_eip4844`, `error`, and `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\block_info.rs","byte_start":86,"byte_end":90,"line_start":7,"line_end":7,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            self, eip4844 as tx_eip4844, TxEnvelope","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":92,"byte_end":113,"line_start":7,"line_end":7,"column_start":19,"column_end":40,"is_primary":true,"text":[{"text":"            self, eip4844 as tx_eip4844, TxEnvelope","highlight_start":19,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":115,"byte_end":125,"line_start":7,"line_end":7,"column_start":42,"column_end":52,"is_primary":true,"text":[{"text":"            self, eip4844 as tx_eip4844, TxEnvelope","highlight_start":42,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":306,"byte_end":315,"line_start":14,"line_end":14,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":331,"byte_end":339,"line_start":14,"line_end":14,"column_start":43,"column_end":51,"is_primary":true,"text":[{"text":"        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256","highlight_start":43,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":341,"byte_end":347,"line_start":14,"line_end":14,"column_start":53,"column_end":59,"is_primary":true,"text":[{"text":"        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256","highlight_start":53,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":473,"byte_end":478,"line_start":22,"line_end":22,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        error, Block, BlockTransactions, BlockTransactionsKind::Full, Header, Transaction, TransactionReceipt","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\block_info.rs","byte_start":543,"byte_end":554,"line_start":22,"line_end":22,"column_start":79,"column_end":90,"is_primary":true,"text":[{"text":"        error, Block, BlockTransactions, BlockTransactionsKind::Full, Header, Transaction, TransactionReceipt","highlight_start":79,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\block_info.rs","byte_start":48,"byte_end":138,"line_start":5,"line_end":8,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        transaction::","highlight_start":9,"highlight_end":22},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            self, eip4844 as tx_eip4844, TxEnvelope","highlight_start":1,"highlight_end":52},{"text":"        }, BlockHeader, Transaction as ConsensusTransaction","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":304,"byte_end":315,"line_start":14,"line_end":14,"column_start":16,"column_end":27,"is_primary":true,"text":[{"text":"        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256","highlight_start":16,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":329,"byte_end":347,"line_start":14,"line_end":14,"column_start":41,"column_end":59,"is_primary":true,"text":[{"text":"        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256","highlight_start":41,"highlight_end":59}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":473,"byte_end":480,"line_start":22,"line_end":22,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        error, Block, BlockTransactions, BlockTransactionsKind::Full, Header, Transaction, TransactionReceipt","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\block_info.rs","byte_start":541,"byte_end":554,"line_start":22,"line_end":22,"column_start":77,"column_end":90,"is_primary":true,"text":[{"text":"        error, Block, BlockTransactions, BlockTransactionsKind::Full, Header, Transaction, TransactionReceipt","highlight_start":77,"highlight_end":90}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `BlockHash`, `Sealable`, `Transaction`, `TxEnvelope`, `TxKind`, `eip4844 as tx_eip4844`, `error`, and `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:7:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            self, eip4844 as tx_eip4844, TxEnvelope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Address, BlockHash, Bloom, Bytes, Sealable, TxKind, B256, B64, U256\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        error, Block, BlockTransactions, BlockTransactionsKind::Full, Header, Transaction, TransactionReceipt\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ProviderBuilder`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\provider_info.rs","byte_start":23,"byte_end":38,"line_start":1,"line_end":1,"column_start":24,"column_end":39,"is_primary":true,"text":[{"text":"use alloy::providers::{ProviderBuilder, RootProvider};","highlight_start":24,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\provider_info.rs","byte_start":22,"byte_end":23,"line_start":1,"line_end":1,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"use alloy::providers::{ProviderBuilder, RootProvider};","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\provider_info.rs","byte_start":23,"byte_end":40,"line_start":1,"line_end":1,"column_start":24,"column_end":41,"is_primary":true,"text":[{"text":"use alloy::providers::{ProviderBuilder, RootProvider};","highlight_start":24,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\provider_info.rs","byte_start":52,"byte_end":53,"line_start":1,"line_end":1,"column_start":53,"column_end":54,"is_primary":true,"text":[{"text":"use alloy::providers::{ProviderBuilder, RootProvider};","highlight_start":53,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `ProviderBuilder`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\provider_info.rs:1:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse alloy::providers::{ProviderBuilder, RootProvider};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `alloy::transports::http::Http`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\provider_info.rs","byte_start":59,"byte_end":88,"line_start":2,"line_end":2,"column_start":5,"column_end":34,"is_primary":true,"text":[{"text":"use alloy::transports::http::Http;","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\provider_info.rs","byte_start":55,"byte_end":90,"line_start":2,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use alloy::transports::http::Http;","highlight_start":1,"highlight_end":35},{"text":"use alloy::network::Ethereum;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `alloy::transports::http::Http`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\provider_info.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse alloy::transports::http::Http;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":3874,"byte_end":3882,"line_start":137,"line_end":137,"column_start":71,"column_end":79,"is_primary":true,"text":[{"text":"            transactions: Self::build_transactions_vec_from_block_ref(provider, &block).await?,","highlight_start":71,"highlight_end":79}],"label":"the trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Network`:\n  AnyNetwork\n  alloy::alloy_network::Ethereum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `RootProvider`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":598,"byte_end":605,"line_start":20,"line_end":20,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:137:71\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            transactions: Self::build_transactions_vec_from_block_ref(provider, &block).await?,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Network`:\u001b[0m\n\u001b[0m              AnyNetwork\u001b[0m\n\u001b[0m              alloy::alloy_network::Ethereum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `RootProvider`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `RootProvider`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get_transaction_receipt` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":4503,"byte_end":4526,"line_start":153,"line_end":153,"column_start":87,"column_end":110,"is_primary":true,"text":[{"text":"                let transaction_receipt_option: Option<TransactionReceipt> = provider.get_transaction_receipt(*transaction.inner.tx_hash()).await?;","highlight_start":87,"highlight_end":110}],"label":"method cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs","byte_start":2367,"byte_end":2385,"line_start":81,"line_end":81,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub struct Http<T> {","highlight_start":1,"highlight_end":19}],"label":"doesn't satisfy `_: Network`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":571,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":1,"highlight_end":47}],"label":"doesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\nwhich is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n`RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `get_transaction_receipt` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:153:87\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m= provider.get_transaction_receipt(*transaction.inner.tx_hash()).await?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs:81:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Http<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Network`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\u001b[0m\n\u001b[0m            which is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\u001b[0m\n\u001b[0m            `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get_block_by_number` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":5257,"byte_end":5276,"line_start":170,"line_end":170,"column_start":39,"column_end":58,"is_primary":true,"text":[{"text":"        if let Some(block) = provider.get_block_by_number(ident, Full).await?","highlight_start":39,"highlight_end":58}],"label":"method cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs","byte_start":2367,"byte_end":2385,"line_start":81,"line_end":81,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub struct Http<T> {","highlight_start":1,"highlight_end":19}],"label":"doesn't satisfy `_: Network`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":571,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":1,"highlight_end":47}],"label":"doesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\nwhich is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n`RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `get_block_by_number` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:170:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(block) = provider.get_block_by_number(ident, Full).await?\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs:81:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Http<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Network`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\u001b[0m\n\u001b[0m            which is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\u001b[0m\n\u001b[0m            `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get_transaction_receipt` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":5758,"byte_end":5781,"line_start":180,"line_end":180,"column_start":59,"column_end":82,"is_primary":true,"text":[{"text":"                    transaction_receipt_option = provider.get_transaction_receipt(*transaction.inner.tx_hash()).await?;","highlight_start":59,"highlight_end":82}],"label":"method cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs","byte_start":2367,"byte_end":2385,"line_start":81,"line_end":81,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub struct Http<T> {","highlight_start":1,"highlight_end":19}],"label":"doesn't satisfy `_: Network`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":571,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":1,"highlight_end":47}],"label":"doesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\nwhich is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n`RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `get_transaction_receipt` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:180:59\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    transaction_receipt_option = provider.get_transaction_receipt(*transaction.inner.tx_hash()).await?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs:81:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Http<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Network`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\u001b[0m\n\u001b[0m            which is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\u001b[0m\n\u001b[0m            `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":6294,"byte_end":6320,"line_start":195,"line_end":195,"column_start":49,"column_end":75,"is_primary":true,"text":[{"text":"pub async fn get_latest_block_number(provider: &RootProvider<Http<Client>>) -> Result<u64, Box<dyn Error>>","highlight_start":49,"highlight_end":75}],"label":"the trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Network`:\n  AnyNetwork\n  alloy::alloy_network::Ethereum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `RootProvider`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":598,"byte_end":605,"line_start":20,"line_end":20,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:195:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn get_latest_block_number(provider: &RootProvider<Http<Client>>) -> Result<u64, Box<dyn Error>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Network`:\u001b[0m\n\u001b[0m              AnyNetwork\u001b[0m\n\u001b[0m              alloy::alloy_network::Ethereum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `RootProvider`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `RootProvider`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get_block_number` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":6396,"byte_end":6412,"line_start":197,"line_end":197,"column_start":40,"column_end":56,"is_primary":true,"text":[{"text":"    let latest_block_number = provider.get_block_number().await?;","highlight_start":40,"highlight_end":56}],"label":"method cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs","byte_start":2367,"byte_end":2385,"line_start":81,"line_end":81,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub struct Http<T> {","highlight_start":1,"highlight_end":19}],"label":"doesn't satisfy `_: Network`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":571,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":1,"highlight_end":47}],"label":"doesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\nwhich is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n`RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `get_block_number` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:197:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let latest_block_number = provider.get_block_number().await?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs:81:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Http<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Network`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\u001b[0m\n\u001b[0m            which is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\u001b[0m\n\u001b[0m            `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":6802,"byte_end":6828,"line_start":210,"line_end":210,"column_start":44,"column_end":70,"is_primary":true,"text":[{"text":"pub async fn build_block_struct(provider: &RootProvider<Http<Client>>, ident: BlockNumberOrTag) -> Result<BlockStruct, Box<dyn Error>>","highlight_start":44,"highlight_end":70}],"label":"the trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Network`:\n  AnyNetwork\n  alloy::alloy_network::Ethereum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `RootProvider`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":598,"byte_end":605,"line_start":20,"line_end":20,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:210:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn build_block_struct(provider: &RootProvider<Http<Client>>, ident: BlockNumberOrTag) -> Result<BlockStruct, Box<dyn Error>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Network`:\u001b[0m\n\u001b[0m              AnyNetwork\u001b[0m\n\u001b[0m              alloy::alloy_network::Ethereum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `RootProvider`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `RootProvider`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get_block_by_number` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":6947,"byte_end":6966,"line_start":212,"line_end":212,"column_start":48,"column_end":67,"is_primary":true,"text":[{"text":"    let block_option: Option<Block> = provider.get_block_by_number(ident, Full).await?;","highlight_start":48,"highlight_end":67}],"label":"method cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs","byte_start":2367,"byte_end":2385,"line_start":81,"line_end":81,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub struct Http<T> {","highlight_start":1,"highlight_end":19}],"label":"doesn't satisfy `_: Network`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":571,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":1,"highlight_end":47}],"label":"doesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\nwhich is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n`RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `get_block_by_number` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:212:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let block_option: Option<Block> = provider.get_block_by_number(ident, Full).await?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs:81:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Http<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Network`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\u001b[0m\n\u001b[0m            which is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\u001b[0m\n\u001b[0m            `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":7852,"byte_end":7878,"line_start":237,"line_end":237,"column_start":51,"column_end":77,"is_primary":true,"text":[{"text":"pub async fn build_block_struct_simple(provider: &RootProvider<Http<Client>>, ident: BlockNumberOrTag) -> Result<BlockStructSimple, Box<dyn Error>>","highlight_start":51,"highlight_end":77}],"label":"the trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Network`:\n  AnyNetwork\n  alloy::alloy_network::Ethereum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `RootProvider`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":598,"byte_end":605,"line_start":20,"line_end":20,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:237:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mnc fn build_block_struct_simple(provider: &RootProvider<Http<Client>>, ident: BlockNumberOrTag) -> Result<BlockStructSimple, Box<dyn E\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Network`:\u001b[0m\n\u001b[0m              AnyNetwork\u001b[0m\n\u001b[0m              alloy::alloy_network::Ethereum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `RootProvider`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `RootProvider`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get_block_by_number` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":7991,"byte_end":8010,"line_start":239,"line_end":239,"column_start":38,"column_end":57,"is_primary":true,"text":[{"text":"    let block_data_option = provider.get_block_by_number(ident, Full).await?;","highlight_start":38,"highlight_end":57}],"label":"method cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs","byte_start":2367,"byte_end":2385,"line_start":81,"line_end":81,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub struct Http<T> {","highlight_start":1,"highlight_end":19}],"label":"doesn't satisfy `_: Network`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":571,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":1,"highlight_end":47}],"label":"doesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\nwhich is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n`RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `get_block_by_number` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:239:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let block_data_option = provider.get_block_by_number(ident, Full).await?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs:81:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Http<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Network`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\u001b[0m\n\u001b[0m            which is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\u001b[0m\n\u001b[0m            `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":8424,"byte_end":8450,"line_start":254,"line_end":254,"column_start":48,"column_end":74,"is_primary":true,"text":[{"text":"pub async fn view_block_header_data(provider: &RootProvider<Http<Client>>, ident: BlockNumberOrTag) -> Result<BlockHeaderData, Box<dyn Error>>","highlight_start":48,"highlight_end":74}],"label":"the trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Network`:\n  AnyNetwork\n  alloy::alloy_network::Ethereum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `RootProvider`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":598,"byte_end":605,"line_start":20,"line_end":20,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:254:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0masync fn view_block_header_data(provider: &RootProvider<Http<Client>>, ident: BlockNumberOrTag) -> Result<BlockHeaderData, Box<dyn Err\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Network`:\u001b[0m\n\u001b[0m              AnyNetwork\u001b[0m\n\u001b[0m              alloy::alloy_network::Ethereum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `RootProvider`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `RootProvider`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get_block_by_number` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":8576,"byte_end":8595,"line_start":256,"line_end":256,"column_start":53,"column_end":72,"is_primary":true,"text":[{"text":"    let block_data_option: Option<Block> = provider.get_block_by_number(ident, Full).await?;","highlight_start":53,"highlight_end":72}],"label":"method cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs","byte_start":2367,"byte_end":2385,"line_start":81,"line_end":81,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub struct Http<T> {","highlight_start":1,"highlight_end":19}],"label":"doesn't satisfy `_: Network`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":571,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":1,"highlight_end":47}],"label":"doesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\nwhich is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n`RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `get_block_by_number` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:256:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let block_data_option: Option<Block> = provider.get_block_by_number(ident, Full).await?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs:81:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Http<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Network`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\u001b[0m\n\u001b[0m            which is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\u001b[0m\n\u001b[0m            `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m            `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\u001b[0m\n\u001b[0m            which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":3427,"byte_end":3453,"line_start":129,"line_end":129,"column_start":42,"column_end":68,"is_primary":true,"text":[{"text":"    pub async fn build_struct(provider: &RootProvider<Http<Client>>, block: Block) -> Result<BlockTransactionsDetails, Box<dyn Error>>","highlight_start":42,"highlight_end":68}],"label":"the trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Network`:\n  AnyNetwork\n  alloy::alloy_network::Ethereum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `RootProvider`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":598,"byte_end":605,"line_start":20,"line_end":20,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:129:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub async fn build_struct(provider: &RootProvider<Http<Client>>, block: Block) -> Result<BlockTransactionsDetails, Box<dyn Error>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Network`:\u001b[0m\n\u001b[0m              AnyNetwork\u001b[0m\n\u001b[0m              alloy::alloy_network::Ethereum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `RootProvider`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `RootProvider`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":4020,"byte_end":4046,"line_start":143,"line_end":143,"column_start":67,"column_end":93,"is_primary":true,"text":[{"text":"    pub async fn build_transactions_vec_from_block_ref(provider: &RootProvider<Http<Client>>, block: &Block) -> Result<Vec<TransactionDetails>, Box<dyn Error>>","highlight_start":67,"highlight_end":93}],"label":"the trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Network`:\n  AnyNetwork\n  alloy::alloy_network::Ethereum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `RootProvider`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":598,"byte_end":605,"line_start":20,"line_end":20,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:143:67\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mtransactions_vec_from_block_ref(provider: &RootProvider<Http<Client>>, block: &Block) -> Result<Vec<TransactionDetails>, Box<dyn Error>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Network`:\u001b[0m\n\u001b[0m              AnyNetwork\u001b[0m\n\u001b[0m              alloy::alloy_network::Ethereum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `RootProvider`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `RootProvider`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\block_info.rs","byte_start":5028,"byte_end":5054,"line_start":166,"line_end":166,"column_start":63,"column_end":89,"is_primary":true,"text":[{"text":"    pub async fn build_transactions_vec_from_ident(provider: &RootProvider<Http<Client>>, ident: BlockNumberOrTag) -> Result<Vec<TransactionDetails>, Box<dyn Error>>","highlight_start":63,"highlight_end":89}],"label":"the trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Network`:\n  AnyNetwork\n  alloy::alloy_network::Ethereum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `RootProvider`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":598,"byte_end":605,"line_start":20,"line_end":20,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:166:63\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mild_transactions_vec_from_ident(provider: &RootProvider<Http<Client>>, ident: BlockNumberOrTag) -> Result<Vec<TransactionDetails>, Box\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Network`:\u001b[0m\n\u001b[0m              AnyNetwork\u001b[0m\n\u001b[0m              alloy::alloy_network::Ethereum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `RootProvider`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `RootProvider`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get_transaction_by_hash` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\transaction_info.rs","byte_start":815,"byte_end":838,"line_start":38,"line_end":38,"column_start":49,"column_end":72,"is_primary":true,"text":[{"text":"        if let Ok(Some(transaction)) = provider.get_transaction_by_hash(transaction_hash).await","highlight_start":49,"highlight_end":72}],"label":"method cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs","byte_start":2367,"byte_end":2385,"line_start":81,"line_end":81,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub struct Http<T> {","highlight_start":1,"highlight_end":19}],"label":"doesn't satisfy `_: Network`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":571,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":1,"highlight_end":47}],"label":"doesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\nwhich is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n`RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `get_transaction_by_hash` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\transaction_info.rs:38:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Ok(Some(transaction)) = provider.get_transaction_by_hash(transaction_hash).await\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs:81:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Http<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Network`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\u001b[0m\n\u001b[0m           which is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\u001b[0m\n\u001b[0m           `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m           which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m           `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\u001b[0m\n\u001b[0m           which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m           `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\u001b[0m\n\u001b[0m           which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get_transaction_receipt` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\transaction_info.rs","byte_start":935,"byte_end":958,"line_start":40,"line_end":40,"column_start":61,"column_end":84,"is_primary":true,"text":[{"text":"            if let Ok(Some(transaction_receipt)) = provider.get_transaction_receipt(transaction_hash).await","highlight_start":61,"highlight_end":84}],"label":"method cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs","byte_start":2367,"byte_end":2385,"line_start":81,"line_end":81,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub struct Http<T> {","highlight_start":1,"highlight_end":19}],"label":"doesn't satisfy `_: Network`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":571,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":1,"highlight_end":47}],"label":"doesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\nwhich is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n`RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `get_transaction_receipt` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\transaction_info.rs:40:61\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Ok(Some(transaction_receipt)) = provider.get_transaction_receipt(transaction_hash).await\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs:81:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Http<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Network`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\u001b[0m\n\u001b[0m           which is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\u001b[0m\n\u001b[0m           `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m           which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m           `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\u001b[0m\n\u001b[0m           which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m           `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\u001b[0m\n\u001b[0m           which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get_block_by_hash` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\transaction_info.rs","byte_start":1198,"byte_end":1215,"line_start":46,"line_end":46,"column_start":55,"column_end":72,"is_primary":true,"text":[{"text":"                    if let Ok(Some(block)) = provider.get_block_by_hash(block_hash, BlockTransactionsKind::Full).await","highlight_start":55,"highlight_end":72}],"label":"method cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs","byte_start":2367,"byte_end":2385,"line_start":81,"line_end":81,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub struct Http<T> {","highlight_start":1,"highlight_end":19}],"label":"doesn't satisfy `_: Network`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":571,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":1,"highlight_end":47}],"label":"doesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\nwhich is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n`RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\n`&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\nwhich is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `get_block_by_hash` exists for reference `&RootProvider<Http<Client>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\transaction_info.rs:46:55\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Ok(Some(block)) = provider.get_block_by_hash(block_hash, BlockTransactionsKind::Full).await\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&RootProvider<Http<Client>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-transport-http-0.11.0\\src/lib.rs:81:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Http<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Network`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Provider<Http<Client>>` or `_: Provider<_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network`\u001b[0m\n\u001b[0m           which is required by `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\u001b[0m\n\u001b[0m           `RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m           which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m           `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Send`\u001b[0m\n\u001b[0m           which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\u001b[0m           `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: Sync`\u001b[0m\n\u001b[0m           which is required by `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>: alloy::providers::Provider<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\transaction_info.rs","byte_start":661,"byte_end":687,"line_start":36,"line_end":36,"column_start":33,"column_end":59,"is_primary":true,"text":[{"text":"    pub async fn get(provider: &RootProvider<Http<Client>>, transaction_hash: B256) -> Result<TransactionDetails, Box<dyn Error>>","highlight_start":33,"highlight_end":59}],"label":"the trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Network`:\n  AnyNetwork\n  alloy::alloy_network::Ethereum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `RootProvider`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":598,"byte_end":605,"line_start":20,"line_end":20,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\transaction_info.rs:36:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub async fn get(provider: &RootProvider<Http<Client>>, transaction_hash: B256) -> Result<TransactionDetails, Box<dyn Error>>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Network`:\u001b[0m\n\u001b[0m             AnyNetwork\u001b[0m\n\u001b[0m             alloy::alloy_network::Ethereum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `RootProvider`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `RootProvider`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\provider_info.rs","byte_start":368,"byte_end":376,"line_start":10,"line_end":10,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    Ok(provider)","highlight_start":8,"highlight_end":16}],"label":"expected `RootProvider`, found `RpcClient`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\provider_info.rs","byte_start":365,"byte_end":367,"line_start":10,"line_end":10,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    Ok(provider)","highlight_start":5,"highlight_end":7}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `RootProvider`\n   found struct `RpcClient`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `RpcClient` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src\\provider_info.rs","byte_start":368,"byte_end":376,"line_start":10,"line_end":10,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    Ok(provider)","highlight_start":8,"highlight_end":16}],"label":"this argument influences the type of `Ok`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\provider_info.rs","byte_start":365,"byte_end":377,"line_start":10,"line_end":10,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    Ok(provider)","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\result.rs","byte_start":19708,"byte_end":19710,"line_start":531,"line_end":531,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\provider_info.rs:10:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ok(provider)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `RootProvider`, found `RpcClient`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14marguments to this enum variant are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mRootProvider\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mRpcClient\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the type constructed contains `RpcClient` due to the type of the argument passed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\provider_info.rs:10:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ok(provider)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis argument influences the type of `Ok`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: tuple variant defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\result.rs:531:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m531\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":986,"byte_end":995,"line_start":33,"line_end":33,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"            &provider, alloy::primitives::B256::from_str(\"0x291351476ef62e83ed33fb385f998232b8577bd1af60eb3463ce5a9e77fc8666\"","highlight_start":13,"highlight_end":22}],"label":"the trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Network`:\n  AnyNetwork\n  alloy::alloy_network::Ethereum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `RootProvider`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs","byte_start":598,"byte_end":605,"line_start":20,"line_end":20,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"pub struct RootProvider<N: Network = Ethereum> {","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `alloy::transports::alloy_transport_http::Http<reqwest::Client>: Network` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:33:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            &provider, alloy::primitives::B256::from_str(\"0x291351476ef62e83ed33fb385f998232b8577bd1af60eb3463ce5a9e77fc8666\"\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Network` is not implemented for `alloy::transports::alloy_transport_http::Http<reqwest::Client>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Network`:\u001b[0m\n\u001b[0m             AnyNetwork\u001b[0m\n\u001b[0m             alloy::alloy_network::Ethereum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `RootProvider`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\ianka\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\alloy-provider-0.11.0\\src\\provider\\root.rs:20:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RootProvider<N: Network = Ethereum> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `RootProvider`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":986,"byte_end":995,"line_start":33,"line_end":33,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"            &provider, alloy::primitives::B256::from_str(\"0x291351476ef62e83ed33fb385f998232b8577bd1af60eb3463ce5a9e77fc8666\"","highlight_start":13,"highlight_end":22}],"label":"expected `&RootProvider<Http<Client>>`, found `&RootProvider`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":922,"byte_end":963,"line_start":31,"line_end":31,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        transaction_info::TransactionDetails::get","highlight_start":9,"highlight_end":50}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected reference `&RootProvider<alloy::transports::alloy_transport_http::Http<reqwest::Client>>`\n   found reference `&RootProvider<alloy::alloy_network::Ethereum>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src\\transaction_info.rs","byte_start":650,"byte_end":687,"line_start":36,"line_end":36,"column_start":22,"column_end":59,"is_primary":false,"text":[{"text":"    pub async fn get(provider: &RootProvider<Http<Client>>, transaction_hash: B256) -> Result<TransactionDetails, Box<dyn Error>>","highlight_start":22,"highlight_end":59}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\transaction_info.rs","byte_start":646,"byte_end":649,"line_start":36,"line_end":36,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"    pub async fn get(provider: &RootProvider<Http<Client>>, transaction_hash: B256) -> Result<TransactionDetails, Box<dyn Error>>","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:33:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        transaction_info::TransactionDetails::get\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            &provider, alloy::primitives::B256::from_str(\"0x291351476ef62e83ed33fb385f998232b8577bd1af60eb3463ce5a9e77fc8666\"\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&RootProvider<Http<Client>>`, found `&RootProvider`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected reference `&RootProvider<alloy::\u001b[0m\u001b[0m\u001b[1m\u001b[35mtransports::alloy_transport_http::Http<reqwest::Client>\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m              found reference `&RootProvider<alloy::\u001b[0m\u001b[0m\u001b[1m\u001b[35malloy_network::Ethereum\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\transaction_info.rs:36:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub async fn get(provider: &RootProvider<Http<Client>>, transaction_hash: B256) -> Result<TransactionDetails, Box<dyn Error>>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `BlockHeader`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\block_info.rs","byte_start":138,"byte_end":149,"line_start":8,"line_end":8,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"        }, BlockHeader, Transaction as ConsensusTransaction","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `BlockHeader`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:8:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }, BlockHeader, Transaction as ConsensusTransaction\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Transaction`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\block_info.rs","byte_start":151,"byte_end":162,"line_start":8,"line_end":8,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"        }, BlockHeader, Transaction as ConsensusTransaction","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Transaction`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:8:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }, BlockHeader, Transaction as ConsensusTransaction\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Provider`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\block_info.rs","byte_start":407,"byte_end":415,"line_start":18,"line_end":18,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        Provider, RootProvider","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Provider`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\block_info.rs:18:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Provider, RootProvider\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Provider`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\transaction_info.rs","byte_start":264,"byte_end":272,"line_start":15,"line_end":15,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        Provider,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Provider`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\transaction_info.rs:15:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Provider,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 22 previous errors; 7 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 22 previous errors; 7 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0308, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0277, E0308, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
